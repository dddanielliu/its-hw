//
// Generated file, do not edit! Created by nedtool 5.6 from DemoSafetyMessage.msg.
//

#ifndef __VEINS_DEMOSAFETYMESSAGE_M_H
#define __VEINS_DEMOSAFETYMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace veins {

/**
 * Class generated from <tt>DemoSafetyMessage.msg:41</tt> by nedtool.
 * <pre>
 * packet DemoSafetyMessage
 * {
 *     int vehicle;
 *     double posX;
 *     double posY;
 *     double speed;
 *     double acl;
 * }
 * </pre>
 */
class DemoSafetyMessage : public ::omnetpp::cPacket
{
  protected:
    int vehicle;
    double posX;
    double posY;
    double speed;
    double acl;

  private:
    void copy(const DemoSafetyMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DemoSafetyMessage&);

  public:
    DemoSafetyMessage(const char *name=nullptr, short kind=0);
    DemoSafetyMessage(const DemoSafetyMessage& other);
    virtual ~DemoSafetyMessage();
    DemoSafetyMessage& operator=(const DemoSafetyMessage& other);
    virtual DemoSafetyMessage *dup() const override {return new DemoSafetyMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getVehicle() const;
    virtual void setVehicle(int vehicle);
    virtual double getPosX() const;
    virtual void setPosX(double posX);
    virtual double getPosY() const;
    virtual void setPosY(double posY);
    virtual double getSpeed() const;
    virtual void setSpeed(double speed);
    virtual double getAcl() const;
    virtual void setAcl(double acl);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DemoSafetyMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DemoSafetyMessage& obj) {obj.parsimUnpack(b);}

} // namespace veins

#endif // ifndef __VEINS_DEMOSAFETYMESSAGE_M_H

